Challenge 1: Largest Palindrome
A palindromic number reads the same both ways. For example, 1234321 is a palindrome. The largest palindrome made from the product of two two-digit numbers is 9009 = 91 Ã— 99. Find the largest palindrome made from the product of two three-digit numbers. 

Solution 1:
def find_palindrome(n):
    tem = n 
    rev = 0
    while(n>0):
        rem = n % 10
        rev = rev * 10 + rem
        n = n // 10
     
    if (tem == rev):
        return True
    else:
        return False


largest_palindrome = 9009
for x in range(100,1000):
    for y in range(100,1000):
        if find_palindrome(x * y) == True:
            if (x * y) > largest_palindrome:
                largest_palindrome = x * y
                s = x
                m = y
print(largest_palindrome,s,m)



Challenge 3: Multiples of 3 and 5
If we list all of the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6, and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 and 5 below 1,000. 


multi_list = []
for i in range(1,1000):
    if (i % 3 == 0) or (i % 5 == 0 and i % 15 != 0):
        multi_list.append(i)
print(multi_list)

sum_mul = sum(multi_list)
print(sum_mul)
